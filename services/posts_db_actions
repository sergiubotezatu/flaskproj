from configparser import ConfigParser, DatabaseError
from psycopg2 import connect

class PostsDbWork:
    def __init__(self, action):
        self.conn = self.db_connect()
        self.cursor = self.conn.cursor()
        self.action = action

    def edit_table(self):
        try:
            self.cursor.execute(self.action)
            self.conn.commit()
            self.cursor.close()
        except (Exception, DatabaseError) as error:
            print(error)
        self.conn.close()

    def config(filename='database.ini', section='postgresql'):
        parser = ConfigParser() 
        db = {}
        if parser.has_section(section):
            params = parser.items(section)
            for param in params:
                db[param[0]] = param[1]
        else:
            raise Exception(f"Section {section} not found in the {filename} file")

        return db

    def db_connect(self):
        configuration = self.config()
        return connect(configuration)    

class CurPostAction:
    def __init__(self, action):
        self.action = action
        self.options = self.get_all_options()

    def get_all_options(self):
        return {
        "creation" : self.table_creation(),
        "insertion" : self.insertion,
        "edit" : self.update(),
        "deletion" : self.delete()
        }

    def table_creation(self):
        return """        
            CREATE TABLE [IF NOT EXISTS] blog_posts (
            PostId char(3),
            Author varchar(30),
            Title varchar(200),
            Content varchar(3000),
            Date varchar(20)
        )
        """

    def insertion(self):
        return """
            INSERT INTO blog_posts       
            VALUES (%s, %s, %s, %s, %s)
            """

    def update(self):
        return """
            UPDATE blog_posts
            SET Author = %s, Title= %s, Content = %s, Date = %s
            WHERE PostID = %s;
        """

    def delete(seld):
        return """
            DELETE FROM blog_posts
            WHERE PostID = %s;
            """